# serverless.yml
service: smart-city-climbing-trail

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-dotenv-plugin

useDotenv: true

resources:
  Resources:
    ApiCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: !Sub 'ek8c3h52ac.execute-api.ap-northeast-2.amazonaws.com'
              Id: ApiOrigin
              CustomOriginConfig:
                OriginProtocolPolicy: https-only
          Enabled: true
          DefaultCacheBehavior:
            TargetOriginId: ApiOrigin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - PATCH
              - DELETE
            CachedMethods:
              - GET
              - HEAD
              - OPTIONS
            ForwardedValues:
              QueryString: true
              Headers:
                - Authorization
              Cookies:
                Forward: none
          ViewerCertificate:
            CloudFrontDefaultCertificate: true

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-northeast-2
  vpc:
    securityGroupIds:
      - sg-037ec9e8db5adb6b3 # Lambda 보안 그룹 ID
    subnetIds:
      - subnet-063b0e0f006a3e0af # Private 서브넷 ID 2b
      - subnet-02985762f599046a4 # Private 서브넷 ID 2a
  environment:
    DB_HOST: ${env:DB_HOST}
    DB_PORT: 27017
    DB_USER: ${env:DB_USER}
    DB_PASS: ${env:DB_PASS}
    DB_NAME: ${env:DB_NAME}
    S3_BUCKET_NAME: ${env:S3_BUCKET_NAME}
    S3_CERTIFICATE_PATH: ${env:S3_CERTIFICATE_PATH}
    GOOGLE_MAPS_API_KEY: ${env:GOOGLE_MAPS_API_KEY}
    GOOGLE_MAPS_API_URL: ${env:GOOGLE_MAPS_API_URL}
    DATA_PORTAL_API_URL: ${env:DATA_PORTAL_API_URL}
    DATA_PORTAL_API_KEY: ${env:DATA_PORTAL_API_KEY}
    USER_POOL_ID: ${env:USER_POOL_ID}
    CLIENT_ID: ${env:CLIENT_ID}
    CLIENT_SECRET: ${env:CLIENT_SECRET}
    REGION: ${env:REGION}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
          Resource: arn:aws:s3:::${env:S3_BUCKET_NAME}/certificates/*
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: '*'
        # - Effect: Allow
        #   Action:
        #     - cognito-idp:SignUp
        #     - cognito-idp:AdminInitiateAuth
        #     - cognito-idp:AdminRespondToAuthChallenge
        #     - cognito-idp:GetUser
        #   Resource: arn:aws:cognito-idp:ap-northeast-2:654654181350:userpool/${env:USER_POOL_ID}

  httpApi:
    cors:
      allowCredentials: false
      allowedOrigins:
        # - 'https://diiw82yxi0yyj.cloudfront.net' # 프론트엔드 CloudFront 도메인 추가
        # - 'http://cloud-web-s3.s3-website.ap-northeast-2.amazonaws.com' # S3 Swagger UI 도메인
        # - 'http://localhost:3000'
        - '*'
      allowedHeaders:
        # - Content-Type
        # - X-Amz-Date
        # - Authorization
        # - X-Api-Key
        # - X-Amz-Security-Token
        - '*'
      allowedMethods:
        # - OPTIONS
        # - GET
        # - POST
        # - PUT
        # - DELETE
        - '*'
      maxAge: 86400

functions:
  test-handler:
    handler: ./src/handlers/test.handler
    events:
      - httpApi:
          path: /test/{age}
          method: GET

  second-test-handler:
    handler: ./src/handlers/second-test.handler
    events:
      - httpApi:
          path: /second-test
          method: GET

  db-test-handler:
    handler: ./src/handlers/db-test.handler
    events:
      - httpApi:
          path: /db-test
          method: GET

  climbing-trail-handler:
    handler: ./src/handlers/climbing-trail.handler
    events:
      - httpApi:
          path: /climbing/trail
          method: GET

  login-test-handler:
    handler: ./src/handlers/login-test.handler
    events:
      - httpApi:
          path: /login-test
          method: GET

  get-hiker-handler:
    handler: ./src/handlers/get-hiker.handler
    events:
      - httpApi:
          path: /hikers
          method: GET

  update-hiker-handler:
    handler: ./src/handlers/update-hiker.handler
    events:
      - httpApi:
          path: /hikers
          method: POST

  find-subways-nearby-handler:
    handler: ./src/handlers/find-subways-nearby.handler
    events:
      - httpApi:
          path: /subways/nearby
          method: GET

  init-subways-nearby-handler:
    handler: ./src/handlers/init-subways-nearby.handler
    events:
      - httpApi:
          path: /subways/nearby
          method: POST

  get-climbing-monthly-track-handler:
    handler: ./src/handlers/get-climbing-monthly-track.handler
    events:
      - httpApi:
          path: /climbing/monthly-track
          method: GET

  get-climbing-track-handler:
    handler: ./src/handlers/get-climbing-track.handler
    events:
      - httpApi:
          path: /climbing/track
          method: GET

  update-climbing-track-handler:
    handler: ./src/handlers/update-climbing-track.handler
    events:
      - httpApi:
          path: /climbing/track
          method: POST

  sign-up-handler:
    handler: ./src/handlers/auth.handler
    events:
      - httpApi:
          path: /sign-up
          method: POST

  confirm-up-handler:
    handler: ./src/handlers/confirm.handler
    events:
      - httpApi:
          path: /confirm
          method: POST

  sign-in-handler:
    handler: ./src/handlers/login.handler
    events:
      - httpApi:
          path: /sign-in
          method: POST

  sign-out-handler:
    handler: ./src/handlers/logout.handler
    events:
      - httpApi:
          path: /sign-out
          method: POST

  refreshToken-handler:
    handler: ./src/handlers/refreshToken.handler
    events:
      - httpApi:
          path: /refresh
          method: POST

  accessToken-handler:
    handler: ./src/handlers/accessToken.handler
    events:
      - httpApi:
          path: /access
          method: GET

  mountain-info-handler:
    handler: ./src/handlers/mountain-info.handler
    timeout: 30
    events:
      - httpApi:
          path: /mountain-info
          method: GET

  swagger-json-handler:
    handler: ./src/handlers/swagger-json.handler
    events:
      - httpApi:
          path: /swagger.json
          method: GET
    timeout: 30

  alternative-recommendation-handler:
    handler: ./src/handlers/alternative-trail.handler
    events:
      - httpApi:
          path: /climbing/trail/alternative
          method: GET

  different-recommendation-handler:
    handler: ./src/handlers/different-trail.handler
    events:
      - httpApi:
          path: /climbing/trail/different
          method: GET

custom:
  esbuild:
    bundle: true
    external:
      # - swagger-ui-dist
    minify: true
    sourcemap: true
    exclude: [] # Lambda 런타임이 기본 포함하는 모듈 제외
    target: node18
    platform: node
    concurrency: 10
    loader:
      '.json': 'json' # JSON 파일 로더 추가
  serverless-offline:
    httpPort: 8000

package:
  individually: true
  include:
    - swagger.json
